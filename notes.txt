# NOTES 

# 1

- In order to sort out numbers 
array.sort(compareFunc);
let compareFunc = (a, b) => {
  return a - b;
  // if the return is > 0  => a
  // if the return is 0 => none
  // if the return is < 0 => b
};


# 2

- usage of reduce (the ONE result of all array index, eg. The total sum of -- )
classPoints.reduce((accum, currentValue) => {
  return accum + currentValue;
}, 0);
// accum is THE first arguments of redues = initializing as 0 , currentValue is each index of array 


# 3

- map / fliter method (gives new array)
- reduce / sort / push / pop / shift / unshift (acted on SELF array)


# 4

const nums = [1, 2, 3]
Math.min(nums)    // NaN
Math.max(nums)    // Nan
That is because Math.min or Math.max functions expect distinct variables and not an array. 

var nums = [1, 2, 3]
Math.min.apply(Math, nums)    // 1
Math.max.apply(Math, nums)    // 3
Math.min.apply(null, nums)    // 1
Math.max.apply(null, nums)    // 3


# 5

split('') => turns a string to an array , eg - string.split(",") => string will be split into an array with coma
let string = "hi,my,name,is,su,myat,aung" 

the output  => [ 'hi', 'my', 'name', 'is','su', 'myat','aung' ]


# 6 

Array.reverse()  => reverse an array 
eg . [a , b , c , d] => [d , c , b , a]


# 7

.join(",")   => join an array to a string with coma 
eg : ["A" , "B" , "C" , "D" ]  =>   "A , B , C , D"


# 8 

The Math.ceil() function always rounds up and returns the smaller integer greater than or equal to a given number. 
console.log(Math.ceil(.95)); => output: 1
console.log(Math.ceil(4)); =>  output: 4